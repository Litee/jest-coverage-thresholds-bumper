// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when running execute() function and input files exist and thresholds file has jest.config.js format should update coverage thresholds 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "./jest.config.js",
      "module.exports = {
                    coverageThreshold: {
                        global: {
                            lines: 12,
                        },
                    },
                }",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`when running execute() function and input files exist and thresholds file has jest.config.js format should update coverage thresholds 2`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "./jest.config.js",
      "module.exports = {
                    coverageThreshold: {
                        global: {
                            branches: 45.678,
                            functions: 34.56,
                            lines: 12,
                        },
                    },
                }",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`when running execute() function and input files exist and thresholds file has jest.config.js format should update coverage thresholds 3`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "./jest.config.js",
      "module.exports = {
                    coverageThreshold: {
                        global: {
                            branches: 45.678,
                            functions: 30,
                            lines: 10,
                        },
                    },
                }",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`when running execute() function and input files exist and thresholds file has jest.config.js format specified as argument should update coverage thresholds 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "./custom/jest.custom.config.js",
      "module.exports = {
                    coverageThreshold: {
                        global: {
                            lines: 12,
                        },
                    },
                }",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`when running execute() function and input files exist and thresholds file has jest.config.js format specified as argument should update coverage thresholds 2`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "./custom/jest.custom.config.js",
      "module.exports = {
                    coverageThreshold: {
                        global: {
                            branches: 45.678,
                            functions: 34.56,
                            lines: 12,
                        },
                    },
                }",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`when running execute() function and input files exist and thresholds file has jest.config.js format specified as argument should update coverage thresholds 3`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "./custom/jest.custom.config.js",
      "module.exports = {
                    coverageThreshold: {
                        global: {
                            branches: 45.678,
                            functions: 30,
                            lines: 10,
                        },
                    },
                }",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`when running execute() function and input files exist and thresholds file has jest.config.json format and coverageThresholds section exists should update coverage thresholds 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "./jest.config.json",
      "{
  \\"coverageThreshold\\": {
    \\"global\\": {
      \\"branches\\": 90,
      \\"functions\\": -10,
      \\"lines\\": 12
    }
  }
}",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`when running execute() function and input files exist and thresholds file has jest.config.json format and coverageThresholds section exists should update coverage thresholds 2`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "./jest.config.json",
      "{
  \\"coverageThreshold\\": {
    \\"global\\": {
      \\"branches\\": 45.678,
      \\"functions\\": 34.56,
      \\"lines\\": 12
    }
  }
}",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`when running execute() function and input files exist and thresholds file has jest.config.json format specified as an argument and coverageThresholds section exists should update coverage thresholds 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "./custom/jest.custom.config.json",
      "{
  \\"coverageThreshold\\": {
    \\"global\\": {
      \\"branches\\": 90,
      \\"functions\\": -10,
      \\"lines\\": 12
    }
  }
}",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`when running execute() function and input files exist and thresholds file has jest.config.json format specified as an argument and coverageThresholds section exists should update coverage thresholds 2`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "./custom/jest.custom.config.json",
      "{
  \\"coverageThreshold\\": {
    \\"global\\": {
      \\"branches\\": 45.678,
      \\"functions\\": 34.56,
      \\"lines\\": 12
    }
  }
}",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`when running execute() function and input files exist and thresholds file has jest.config.ts format should update coverage thresholds 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "./jest.config.ts",
      "module.exports = {
                    coverageThreshold: {
                        global: {
                            lines: 12,
                        },
                    },
                }",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`when running execute() function and input files exist and thresholds file has jest.config.ts format should update coverage thresholds 2`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "./jest.config.ts",
      "module.exports = {
                    coverageThreshold: {
                        global: {
                            branches: 45.678,
                            functions: 34.56,
                            lines: 12,
                        },
                    },
                }",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`when running execute() function and input files exist and thresholds file has jest.config.ts format should update coverage thresholds 3`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "./jest.config.ts",
      "module.exports = {
                    coverageThreshold: {
                        global: {
                            branches: 45.678,
                            functions: 30,
                            lines: 10,
                        },
                    },
                }",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`when running execute() function and input files exist and thresholds file has package.json format and jest section exists should update coverage thresholds 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "./package.json",
      "{
  \\"name\\": \\"jest-coverage-thresholds-bumper-test\\",
  \\"version\\": \\"0.0.1\\",
  \\"jest\\": {
    \\"coverageThreshold\\": {
      \\"global\\": {
        \\"branches\\": 90,
        \\"functions\\": -10,
        \\"lines\\": 12
      }
    }
  }
}",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`when running execute() function and input files exist and thresholds file has package.json format and jest section exists should update coverage thresholds 2`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "./package.json",
      "{
  \\"name\\": \\"jest-coverage-thresholds-bumper-test\\",
  \\"version\\": \\"0.0.1\\",
  \\"jest\\": {
    \\"coverageThreshold\\": {
      \\"global\\": {
        \\"branches\\": 45.678,
        \\"functions\\": 34.56,
        \\"lines\\": 12
      }
    }
  }
}",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`when running execute() function and input files exist and thresholds file has package.json format but jest section does not exist should fail 1`] = `"package.json file has no 'jest' section!"`;

exports[`when running execute() function and input files exist and thresholds file has package.json format but jest section does not exist should fail 2`] = `"package.json file has no 'jest' section!"`;
